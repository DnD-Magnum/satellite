#!/usr/bin/env php
<?php

if (file_exists(__DIR__ . '/../vendor/autoload.php')) {
    require_once(__DIR__ . '/../vendor/autoload.php');
} elseif (file_exists(__DIR__ . '/../../vendor/autoload.php')) {
    require_once(__DIR__ . '/../../vendor/autoload.php');
} elseif (file_exists(__DIR__ . '/../../../vendor/autoload.php')) {
    require_once(__DIR__ . '/../../../vendor/autoload.php');
} elseif (file_exists(__DIR__ . '/../../../../vendor/autoload.php')) {
    require_once(__DIR__ . '/../../../../vendor/autoload.php');
} elseif (file_exists(__DIR__ . '/../../../../../../vendor/autoload.php')) {
    require_once(__DIR__ . '/../../../../../../vendor/autoload.php');
} else {
    throw new \Exception('Unable to load autoloader');
}

use Jane\Component\OpenApiCommon\Console\Command\GenerateCommand;
use Symfony\Component\Console\Input\ArrayInput;
use Symfony\Component\Console\Output\NullOutput;
use Jane\Component\OpenApiCommon\Console\Loader\ConfigLoader;
use Jane\Component\OpenApiCommon\Console\Loader\OpenApiMatcher;
use Jane\Component\OpenApiCommon\Console\Loader\SchemaLoader;

$command = new GenerateCommand(new ConfigLoader(), new SchemaLoader(), new OpenApiMatcher());
$inputArray = new ArrayInput(['--config-file' => __DIR__ . '/../jane/open_api.php'], $command->getDefinition());

$command->execute($inputArray, new NullOutput());
